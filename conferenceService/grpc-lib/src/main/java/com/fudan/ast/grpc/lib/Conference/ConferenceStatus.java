// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: conference.proto

package com.fudan.ast.grpc.lib.Conference;

/**
 * Protobuf enum {@code conference.ConferenceStatus}
 */
public enum ConferenceStatus
    implements com.google.protobuf.ProtocolMessageEnum {
  /**
   * <code>PREPARING = 0;</code>
   */
  PREPARING(0),
  /**
   * <code>SUBMITTING = 1;</code>
   */
  SUBMITTING(1),
  /**
   * <code>REVIEWING = 2;</code>
   */
  REVIEWING(2),
  /**
   * <code>FINAL_JUDGMENT = 3;</code>
   */
  FINAL_JUDGMENT(3),
  /**
   * <code>REVIEW_COMPLETED = 4;</code>
   */
  REVIEW_COMPLETED(4),
  UNRECOGNIZED(-1),
  ;

  /**
   * <code>PREPARING = 0;</code>
   */
  public static final int PREPARING_VALUE = 0;
  /**
   * <code>SUBMITTING = 1;</code>
   */
  public static final int SUBMITTING_VALUE = 1;
  /**
   * <code>REVIEWING = 2;</code>
   */
  public static final int REVIEWING_VALUE = 2;
  /**
   * <code>FINAL_JUDGMENT = 3;</code>
   */
  public static final int FINAL_JUDGMENT_VALUE = 3;
  /**
   * <code>REVIEW_COMPLETED = 4;</code>
   */
  public static final int REVIEW_COMPLETED_VALUE = 4;


  public final int getNumber() {
    if (this == UNRECOGNIZED) {
      throw new java.lang.IllegalArgumentException(
          "Can't get the number of an unknown enum value.");
    }
    return value;
  }

  /**
   * @deprecated Use {@link #forNumber(int)} instead.
   */
  @java.lang.Deprecated
  public static ConferenceStatus valueOf(int value) {
    return forNumber(value);
  }

  public static ConferenceStatus forNumber(int value) {
    switch (value) {
      case 0: return PREPARING;
      case 1: return SUBMITTING;
      case 2: return REVIEWING;
      case 3: return FINAL_JUDGMENT;
      case 4: return REVIEW_COMPLETED;
      default: return null;
    }
  }

  public static com.google.protobuf.Internal.EnumLiteMap<ConferenceStatus>
      internalGetValueMap() {
    return internalValueMap;
  }
  private static final com.google.protobuf.Internal.EnumLiteMap<
      ConferenceStatus> internalValueMap =
        new com.google.protobuf.Internal.EnumLiteMap<ConferenceStatus>() {
          public ConferenceStatus findValueByNumber(int number) {
            return ConferenceStatus.forNumber(number);
          }
        };

  public final com.google.protobuf.Descriptors.EnumValueDescriptor
      getValueDescriptor() {
    return getDescriptor().getValues().get(ordinal());
  }
  public final com.google.protobuf.Descriptors.EnumDescriptor
      getDescriptorForType() {
    return getDescriptor();
  }
  public static final com.google.protobuf.Descriptors.EnumDescriptor
      getDescriptor() {
    return com.fudan.ast.grpc.lib.Conference.ConferenceProto.getDescriptor().getEnumTypes().get(0);
  }

  private static final ConferenceStatus[] VALUES = values();

  public static ConferenceStatus valueOf(
      com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
    if (desc.getType() != getDescriptor()) {
      throw new java.lang.IllegalArgumentException(
        "EnumValueDescriptor is not for this type.");
    }
    if (desc.getIndex() == -1) {
      return UNRECOGNIZED;
    }
    return VALUES[desc.getIndex()];
  }

  private final int value;

  private ConferenceStatus(int value) {
    this.value = value;
  }

  // @@protoc_insertion_point(enum_scope:conference.ConferenceStatus)
}

