// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: Paper.proto
// </auto-generated>
#pragma warning disable 1591, 0612, 3021
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace Com.Lee.Ficss.Proto {

  /// <summary>Holder for reflection information generated from Paper.proto</summary>
  public static partial class PaperReflection {

    #region Descriptor
    /// <summary>File descriptor for Paper.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static PaperReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "CgtQYXBlci5wcm90bxITY29tLmxlZS5maWNzcy5wcm90bxoeZ29vZ2xlL3By",
            "b3RvYnVmL3dyYXBwZXJzLnByb3RvIkoKFkF2YWlsYWJsZVBhcGVyc1JlcXVl",
            "c3QSMAoKc2Vzc2lvbl9pZBgBIAEoCzIcLmdvb2dsZS5wcm90b2J1Zi5TdHJp",
            "bmdWYWx1ZSJFChdBdmFpbGFibGVQYXBlcnNSZXNwb25zZRIqCgZwYXBlcnMY",
            "ASADKAsyGi5jb20ubGVlLmZpY3NzLnByb3RvLlBhcGVyIoEBChhBZGRQYXBl",
            "clRvU2Vzc2lvblJlcXVlc3QSMAoKc2Vzc2lvbl9pZBgBIAEoCzIcLmdvb2ds",
            "ZS5wcm90b2J1Zi5TdHJpbmdWYWx1ZRIzCg1wYXBlcl9maWxlX2lkGAIgASgL",
            "MhwuZ29vZ2xlLnByb3RvYnVmLlN0cmluZ1ZhbHVlIkgKGUFkZFBhcGVyVG9T",
            "ZXNzaW9uUmVzcG9uc2USKwoHc3VjY2VzcxgBIAEoCzIaLmdvb2dsZS5wcm90",
            "b2J1Zi5Cb29sVmFsdWUiVAodRGVsZXRlUGFwZXJGcm9tU2Vzc2lvblJlcXVl",
            "c3QSMwoNcGFwZXJfZmlsZV9pZBgBIAEoCzIcLmdvb2dsZS5wcm90b2J1Zi5T",
            "dHJpbmdWYWx1ZSJNCh5EZWxldGVQYXBlckZyb21TZXNzaW9uUmVzcG9uc2US",
            "KwoHc3VjY2VzcxgBIAEoCzIaLmdvb2dsZS5wcm90b2J1Zi5Cb29sVmFsdWUi",
            "LQoURG93bmxvYWRQYXBlclJlcXVlc3QSFQoNcGFwZXJfZmlsZV9pZBgBIAEo",
            "CSJEChVEb3dubG9hZFBhcGVyUmVzcG9uc2USKwoHc3VjY2VzcxgBIAEoCzIa",
            "Lmdvb2dsZS5wcm90b2J1Zi5Cb29sVmFsdWUifQoFUGFwZXISCgoCaWQYASAB",
            "KAUSFAoMc3VibWl0dGVyX2lkGAIgASgFEg0KBXRpdGxlGAMgASgJEhcKD3Bh",
            "cGVyX2ZpbGVfcGF0aBgEIAEoCRITCgtjb21taXRfdGltZRgFIAEoCRIVCg1s",
            "YXN0X21vZGlmaWVkGAYgASgJIisKCkpzb25SZXN1bHQSDAoEY29kZRgBIAEo",
            "BRIPCgdtZXNzYWdlGAIgASgJIkMKFUF2YWlsYWJsZVBhcGVyc1Jlc3VsdBIq",
            "CgZwYXBlcnMYASADKAsyGi5jb20ubGVlLmZpY3NzLnByb3RvLlBhcGVyIkYK",
            "F0FkZFBhcGVyVG9TZXNzaW9uUmVzdWx0EisKB3N1Y2Nlc3MYASABKAsyGi5n",
            "b29nbGUucHJvdG9idWYuQm9vbFZhbHVlIksKHERlbGV0ZVBhcGVyRnJvbVNl",
            "c3Npb25SZXN1bHQSKwoHc3VjY2VzcxgBIAEoCzIaLmdvb2dsZS5wcm90b2J1",
            "Zi5Cb29sVmFsdWUy5wMKDFBhcGVyU2VydmljZRJxChJHZXRBdmFpbGFibGVQ",
            "YXBlcnMSKy5jb20ubGVlLmZpY3NzLnByb3RvLkF2YWlsYWJsZVBhcGVyc1Jl",
            "cXVlc3QaLC5jb20ubGVlLmZpY3NzLnByb3RvLkF2YWlsYWJsZVBhcGVyc1Jl",
            "c3BvbnNlIgASdAoRQWRkUGFwZXJUb1Nlc3Npb24SLS5jb20ubGVlLmZpY3Nz",
            "LnByb3RvLkFkZFBhcGVyVG9TZXNzaW9uUmVxdWVzdBouLmNvbS5sZWUuZmlj",
            "c3MucHJvdG8uQWRkUGFwZXJUb1Nlc3Npb25SZXNwb25zZSIAEoMBChZEZWxl",
            "dGVQYXBlckZyb21TZXNzaW9uEjIuY29tLmxlZS5maWNzcy5wcm90by5EZWxl",
            "dGVQYXBlckZyb21TZXNzaW9uUmVxdWVzdBozLmNvbS5sZWUuZmljc3MucHJv",
            "dG8uRGVsZXRlUGFwZXJGcm9tU2Vzc2lvblJlc3BvbnNlIgASaAoNRG93bmxv",
            "YWRQYXBlchIpLmNvbS5sZWUuZmljc3MucHJvdG8uRG93bmxvYWRQYXBlclJl",
            "cXVlc3QaKi5jb20ubGVlLmZpY3NzLnByb3RvLkRvd25sb2FkUGFwZXJSZXNw",
            "b25zZSIAYgZwcm90bzM="));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { global::Google.Protobuf.WellKnownTypes.WrappersReflection.Descriptor, },
          new pbr::GeneratedClrTypeInfo(null, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::Com.Lee.Ficss.Proto.AvailablePapersRequest), global::Com.Lee.Ficss.Proto.AvailablePapersRequest.Parser, new[]{ "SessionId" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Com.Lee.Ficss.Proto.AvailablePapersResponse), global::Com.Lee.Ficss.Proto.AvailablePapersResponse.Parser, new[]{ "Papers" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Com.Lee.Ficss.Proto.AddPaperToSessionRequest), global::Com.Lee.Ficss.Proto.AddPaperToSessionRequest.Parser, new[]{ "SessionId", "PaperFileId" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Com.Lee.Ficss.Proto.AddPaperToSessionResponse), global::Com.Lee.Ficss.Proto.AddPaperToSessionResponse.Parser, new[]{ "Success" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Com.Lee.Ficss.Proto.DeletePaperFromSessionRequest), global::Com.Lee.Ficss.Proto.DeletePaperFromSessionRequest.Parser, new[]{ "PaperFileId" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Com.Lee.Ficss.Proto.DeletePaperFromSessionResponse), global::Com.Lee.Ficss.Proto.DeletePaperFromSessionResponse.Parser, new[]{ "Success" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Com.Lee.Ficss.Proto.DownloadPaperRequest), global::Com.Lee.Ficss.Proto.DownloadPaperRequest.Parser, new[]{ "PaperFileId" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Com.Lee.Ficss.Proto.DownloadPaperResponse), global::Com.Lee.Ficss.Proto.DownloadPaperResponse.Parser, new[]{ "Success" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Com.Lee.Ficss.Proto.Paper), global::Com.Lee.Ficss.Proto.Paper.Parser, new[]{ "Id", "SubmitterId", "Title", "PaperFilePath", "CommitTime", "LastModified" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Com.Lee.Ficss.Proto.JsonResult), global::Com.Lee.Ficss.Proto.JsonResult.Parser, new[]{ "Code", "Message" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Com.Lee.Ficss.Proto.AvailablePapersResult), global::Com.Lee.Ficss.Proto.AvailablePapersResult.Parser, new[]{ "Papers" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Com.Lee.Ficss.Proto.AddPaperToSessionResult), global::Com.Lee.Ficss.Proto.AddPaperToSessionResult.Parser, new[]{ "Success" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Com.Lee.Ficss.Proto.DeletePaperFromSessionResult), global::Com.Lee.Ficss.Proto.DeletePaperFromSessionResult.Parser, new[]{ "Success" }, null, null, null)
          }));
    }
    #endregion

  }
  #region Messages
  public sealed partial class AvailablePapersRequest : pb::IMessage<AvailablePapersRequest> {
    private static readonly pb::MessageParser<AvailablePapersRequest> _parser = new pb::MessageParser<AvailablePapersRequest>(() => new AvailablePapersRequest());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<AvailablePapersRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Com.Lee.Ficss.Proto.PaperReflection.Descriptor.MessageTypes[0]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public AvailablePapersRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public AvailablePapersRequest(AvailablePapersRequest other) : this() {
      SessionId = other.SessionId;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public AvailablePapersRequest Clone() {
      return new AvailablePapersRequest(this);
    }

    /// <summary>Field number for the "session_id" field.</summary>
    public const int SessionIdFieldNumber = 1;
    private static readonly pb::FieldCodec<string> _single_sessionId_codec = pb::FieldCodec.ForClassWrapper<string>(10);
    private string sessionId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string SessionId {
      get { return sessionId_; }
      set {
        sessionId_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as AvailablePapersRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(AvailablePapersRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (SessionId != other.SessionId) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (sessionId_ != null) hash ^= SessionId.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (sessionId_ != null) {
        _single_sessionId_codec.WriteTagAndValue(output, SessionId);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (sessionId_ != null) {
        size += _single_sessionId_codec.CalculateSizeWithTag(SessionId);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(AvailablePapersRequest other) {
      if (other == null) {
        return;
      }
      if (other.sessionId_ != null) {
        if (sessionId_ == null || other.SessionId != "") {
          SessionId = other.SessionId;
        }
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            string value = _single_sessionId_codec.Read(input);
            if (sessionId_ == null || value != "") {
              SessionId = value;
            }
            break;
          }
        }
      }
    }

  }

  public sealed partial class AvailablePapersResponse : pb::IMessage<AvailablePapersResponse> {
    private static readonly pb::MessageParser<AvailablePapersResponse> _parser = new pb::MessageParser<AvailablePapersResponse>(() => new AvailablePapersResponse());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<AvailablePapersResponse> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Com.Lee.Ficss.Proto.PaperReflection.Descriptor.MessageTypes[1]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public AvailablePapersResponse() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public AvailablePapersResponse(AvailablePapersResponse other) : this() {
      papers_ = other.papers_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public AvailablePapersResponse Clone() {
      return new AvailablePapersResponse(this);
    }

    /// <summary>Field number for the "papers" field.</summary>
    public const int PapersFieldNumber = 1;
    private static readonly pb::FieldCodec<global::Com.Lee.Ficss.Proto.Paper> _repeated_papers_codec
        = pb::FieldCodec.ForMessage(10, global::Com.Lee.Ficss.Proto.Paper.Parser);
    private readonly pbc::RepeatedField<global::Com.Lee.Ficss.Proto.Paper> papers_ = new pbc::RepeatedField<global::Com.Lee.Ficss.Proto.Paper>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Com.Lee.Ficss.Proto.Paper> Papers {
      get { return papers_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as AvailablePapersResponse);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(AvailablePapersResponse other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if(!papers_.Equals(other.papers_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= papers_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      papers_.WriteTo(output, _repeated_papers_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      size += papers_.CalculateSize(_repeated_papers_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(AvailablePapersResponse other) {
      if (other == null) {
        return;
      }
      papers_.Add(other.papers_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            papers_.AddEntriesFrom(input, _repeated_papers_codec);
            break;
          }
        }
      }
    }

  }

  public sealed partial class AddPaperToSessionRequest : pb::IMessage<AddPaperToSessionRequest> {
    private static readonly pb::MessageParser<AddPaperToSessionRequest> _parser = new pb::MessageParser<AddPaperToSessionRequest>(() => new AddPaperToSessionRequest());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<AddPaperToSessionRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Com.Lee.Ficss.Proto.PaperReflection.Descriptor.MessageTypes[2]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public AddPaperToSessionRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public AddPaperToSessionRequest(AddPaperToSessionRequest other) : this() {
      SessionId = other.SessionId;
      PaperFileId = other.PaperFileId;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public AddPaperToSessionRequest Clone() {
      return new AddPaperToSessionRequest(this);
    }

    /// <summary>Field number for the "session_id" field.</summary>
    public const int SessionIdFieldNumber = 1;
    private static readonly pb::FieldCodec<string> _single_sessionId_codec = pb::FieldCodec.ForClassWrapper<string>(10);
    private string sessionId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string SessionId {
      get { return sessionId_; }
      set {
        sessionId_ = value;
      }
    }

    /// <summary>Field number for the "paper_file_id" field.</summary>
    public const int PaperFileIdFieldNumber = 2;
    private static readonly pb::FieldCodec<string> _single_paperFileId_codec = pb::FieldCodec.ForClassWrapper<string>(18);
    private string paperFileId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string PaperFileId {
      get { return paperFileId_; }
      set {
        paperFileId_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as AddPaperToSessionRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(AddPaperToSessionRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (SessionId != other.SessionId) return false;
      if (PaperFileId != other.PaperFileId) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (sessionId_ != null) hash ^= SessionId.GetHashCode();
      if (paperFileId_ != null) hash ^= PaperFileId.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (sessionId_ != null) {
        _single_sessionId_codec.WriteTagAndValue(output, SessionId);
      }
      if (paperFileId_ != null) {
        _single_paperFileId_codec.WriteTagAndValue(output, PaperFileId);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (sessionId_ != null) {
        size += _single_sessionId_codec.CalculateSizeWithTag(SessionId);
      }
      if (paperFileId_ != null) {
        size += _single_paperFileId_codec.CalculateSizeWithTag(PaperFileId);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(AddPaperToSessionRequest other) {
      if (other == null) {
        return;
      }
      if (other.sessionId_ != null) {
        if (sessionId_ == null || other.SessionId != "") {
          SessionId = other.SessionId;
        }
      }
      if (other.paperFileId_ != null) {
        if (paperFileId_ == null || other.PaperFileId != "") {
          PaperFileId = other.PaperFileId;
        }
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            string value = _single_sessionId_codec.Read(input);
            if (sessionId_ == null || value != "") {
              SessionId = value;
            }
            break;
          }
          case 18: {
            string value = _single_paperFileId_codec.Read(input);
            if (paperFileId_ == null || value != "") {
              PaperFileId = value;
            }
            break;
          }
        }
      }
    }

  }

  public sealed partial class AddPaperToSessionResponse : pb::IMessage<AddPaperToSessionResponse> {
    private static readonly pb::MessageParser<AddPaperToSessionResponse> _parser = new pb::MessageParser<AddPaperToSessionResponse>(() => new AddPaperToSessionResponse());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<AddPaperToSessionResponse> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Com.Lee.Ficss.Proto.PaperReflection.Descriptor.MessageTypes[3]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public AddPaperToSessionResponse() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public AddPaperToSessionResponse(AddPaperToSessionResponse other) : this() {
      Success = other.Success;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public AddPaperToSessionResponse Clone() {
      return new AddPaperToSessionResponse(this);
    }

    /// <summary>Field number for the "success" field.</summary>
    public const int SuccessFieldNumber = 1;
    private static readonly pb::FieldCodec<bool?> _single_success_codec = pb::FieldCodec.ForStructWrapper<bool>(10);
    private bool? success_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool? Success {
      get { return success_; }
      set {
        success_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as AddPaperToSessionResponse);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(AddPaperToSessionResponse other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Success != other.Success) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (success_ != null) hash ^= Success.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (success_ != null) {
        _single_success_codec.WriteTagAndValue(output, Success);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (success_ != null) {
        size += _single_success_codec.CalculateSizeWithTag(Success);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(AddPaperToSessionResponse other) {
      if (other == null) {
        return;
      }
      if (other.success_ != null) {
        if (success_ == null || other.Success != false) {
          Success = other.Success;
        }
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            bool? value = _single_success_codec.Read(input);
            if (success_ == null || value != false) {
              Success = value;
            }
            break;
          }
        }
      }
    }

  }

  public sealed partial class DeletePaperFromSessionRequest : pb::IMessage<DeletePaperFromSessionRequest> {
    private static readonly pb::MessageParser<DeletePaperFromSessionRequest> _parser = new pb::MessageParser<DeletePaperFromSessionRequest>(() => new DeletePaperFromSessionRequest());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<DeletePaperFromSessionRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Com.Lee.Ficss.Proto.PaperReflection.Descriptor.MessageTypes[4]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DeletePaperFromSessionRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DeletePaperFromSessionRequest(DeletePaperFromSessionRequest other) : this() {
      PaperFileId = other.PaperFileId;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DeletePaperFromSessionRequest Clone() {
      return new DeletePaperFromSessionRequest(this);
    }

    /// <summary>Field number for the "paper_file_id" field.</summary>
    public const int PaperFileIdFieldNumber = 1;
    private static readonly pb::FieldCodec<string> _single_paperFileId_codec = pb::FieldCodec.ForClassWrapper<string>(10);
    private string paperFileId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string PaperFileId {
      get { return paperFileId_; }
      set {
        paperFileId_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as DeletePaperFromSessionRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(DeletePaperFromSessionRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (PaperFileId != other.PaperFileId) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (paperFileId_ != null) hash ^= PaperFileId.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (paperFileId_ != null) {
        _single_paperFileId_codec.WriteTagAndValue(output, PaperFileId);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (paperFileId_ != null) {
        size += _single_paperFileId_codec.CalculateSizeWithTag(PaperFileId);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(DeletePaperFromSessionRequest other) {
      if (other == null) {
        return;
      }
      if (other.paperFileId_ != null) {
        if (paperFileId_ == null || other.PaperFileId != "") {
          PaperFileId = other.PaperFileId;
        }
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            string value = _single_paperFileId_codec.Read(input);
            if (paperFileId_ == null || value != "") {
              PaperFileId = value;
            }
            break;
          }
        }
      }
    }

  }

  public sealed partial class DeletePaperFromSessionResponse : pb::IMessage<DeletePaperFromSessionResponse> {
    private static readonly pb::MessageParser<DeletePaperFromSessionResponse> _parser = new pb::MessageParser<DeletePaperFromSessionResponse>(() => new DeletePaperFromSessionResponse());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<DeletePaperFromSessionResponse> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Com.Lee.Ficss.Proto.PaperReflection.Descriptor.MessageTypes[5]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DeletePaperFromSessionResponse() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DeletePaperFromSessionResponse(DeletePaperFromSessionResponse other) : this() {
      Success = other.Success;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DeletePaperFromSessionResponse Clone() {
      return new DeletePaperFromSessionResponse(this);
    }

    /// <summary>Field number for the "success" field.</summary>
    public const int SuccessFieldNumber = 1;
    private static readonly pb::FieldCodec<bool?> _single_success_codec = pb::FieldCodec.ForStructWrapper<bool>(10);
    private bool? success_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool? Success {
      get { return success_; }
      set {
        success_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as DeletePaperFromSessionResponse);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(DeletePaperFromSessionResponse other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Success != other.Success) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (success_ != null) hash ^= Success.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (success_ != null) {
        _single_success_codec.WriteTagAndValue(output, Success);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (success_ != null) {
        size += _single_success_codec.CalculateSizeWithTag(Success);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(DeletePaperFromSessionResponse other) {
      if (other == null) {
        return;
      }
      if (other.success_ != null) {
        if (success_ == null || other.Success != false) {
          Success = other.Success;
        }
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            bool? value = _single_success_codec.Read(input);
            if (success_ == null || value != false) {
              Success = value;
            }
            break;
          }
        }
      }
    }

  }

  public sealed partial class DownloadPaperRequest : pb::IMessage<DownloadPaperRequest> {
    private static readonly pb::MessageParser<DownloadPaperRequest> _parser = new pb::MessageParser<DownloadPaperRequest>(() => new DownloadPaperRequest());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<DownloadPaperRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Com.Lee.Ficss.Proto.PaperReflection.Descriptor.MessageTypes[6]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DownloadPaperRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DownloadPaperRequest(DownloadPaperRequest other) : this() {
      paperFileId_ = other.paperFileId_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DownloadPaperRequest Clone() {
      return new DownloadPaperRequest(this);
    }

    /// <summary>Field number for the "paper_file_id" field.</summary>
    public const int PaperFileIdFieldNumber = 1;
    private string paperFileId_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string PaperFileId {
      get { return paperFileId_; }
      set {
        paperFileId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as DownloadPaperRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(DownloadPaperRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (PaperFileId != other.PaperFileId) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (PaperFileId.Length != 0) hash ^= PaperFileId.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (PaperFileId.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(PaperFileId);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (PaperFileId.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(PaperFileId);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(DownloadPaperRequest other) {
      if (other == null) {
        return;
      }
      if (other.PaperFileId.Length != 0) {
        PaperFileId = other.PaperFileId;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            PaperFileId = input.ReadString();
            break;
          }
        }
      }
    }

  }

  public sealed partial class DownloadPaperResponse : pb::IMessage<DownloadPaperResponse> {
    private static readonly pb::MessageParser<DownloadPaperResponse> _parser = new pb::MessageParser<DownloadPaperResponse>(() => new DownloadPaperResponse());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<DownloadPaperResponse> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Com.Lee.Ficss.Proto.PaperReflection.Descriptor.MessageTypes[7]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DownloadPaperResponse() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DownloadPaperResponse(DownloadPaperResponse other) : this() {
      Success = other.Success;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DownloadPaperResponse Clone() {
      return new DownloadPaperResponse(this);
    }

    /// <summary>Field number for the "success" field.</summary>
    public const int SuccessFieldNumber = 1;
    private static readonly pb::FieldCodec<bool?> _single_success_codec = pb::FieldCodec.ForStructWrapper<bool>(10);
    private bool? success_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool? Success {
      get { return success_; }
      set {
        success_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as DownloadPaperResponse);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(DownloadPaperResponse other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Success != other.Success) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (success_ != null) hash ^= Success.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (success_ != null) {
        _single_success_codec.WriteTagAndValue(output, Success);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (success_ != null) {
        size += _single_success_codec.CalculateSizeWithTag(Success);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(DownloadPaperResponse other) {
      if (other == null) {
        return;
      }
      if (other.success_ != null) {
        if (success_ == null || other.Success != false) {
          Success = other.Success;
        }
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            bool? value = _single_success_codec.Read(input);
            if (success_ == null || value != false) {
              Success = value;
            }
            break;
          }
        }
      }
    }

  }

  public sealed partial class Paper : pb::IMessage<Paper> {
    private static readonly pb::MessageParser<Paper> _parser = new pb::MessageParser<Paper>(() => new Paper());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<Paper> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Com.Lee.Ficss.Proto.PaperReflection.Descriptor.MessageTypes[8]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Paper() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Paper(Paper other) : this() {
      id_ = other.id_;
      submitterId_ = other.submitterId_;
      title_ = other.title_;
      paperFilePath_ = other.paperFilePath_;
      commitTime_ = other.commitTime_;
      lastModified_ = other.lastModified_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Paper Clone() {
      return new Paper(this);
    }

    /// <summary>Field number for the "id" field.</summary>
    public const int IdFieldNumber = 1;
    private int id_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Id {
      get { return id_; }
      set {
        id_ = value;
      }
    }

    /// <summary>Field number for the "submitter_id" field.</summary>
    public const int SubmitterIdFieldNumber = 2;
    private int submitterId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int SubmitterId {
      get { return submitterId_; }
      set {
        submitterId_ = value;
      }
    }

    /// <summary>Field number for the "title" field.</summary>
    public const int TitleFieldNumber = 3;
    private string title_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Title {
      get { return title_; }
      set {
        title_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "paper_file_path" field.</summary>
    public const int PaperFilePathFieldNumber = 4;
    private string paperFilePath_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string PaperFilePath {
      get { return paperFilePath_; }
      set {
        paperFilePath_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "commit_time" field.</summary>
    public const int CommitTimeFieldNumber = 5;
    private string commitTime_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string CommitTime {
      get { return commitTime_; }
      set {
        commitTime_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "last_modified" field.</summary>
    public const int LastModifiedFieldNumber = 6;
    private string lastModified_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string LastModified {
      get { return lastModified_; }
      set {
        lastModified_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as Paper);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(Paper other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Id != other.Id) return false;
      if (SubmitterId != other.SubmitterId) return false;
      if (Title != other.Title) return false;
      if (PaperFilePath != other.PaperFilePath) return false;
      if (CommitTime != other.CommitTime) return false;
      if (LastModified != other.LastModified) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Id != 0) hash ^= Id.GetHashCode();
      if (SubmitterId != 0) hash ^= SubmitterId.GetHashCode();
      if (Title.Length != 0) hash ^= Title.GetHashCode();
      if (PaperFilePath.Length != 0) hash ^= PaperFilePath.GetHashCode();
      if (CommitTime.Length != 0) hash ^= CommitTime.GetHashCode();
      if (LastModified.Length != 0) hash ^= LastModified.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Id != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(Id);
      }
      if (SubmitterId != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(SubmitterId);
      }
      if (Title.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(Title);
      }
      if (PaperFilePath.Length != 0) {
        output.WriteRawTag(34);
        output.WriteString(PaperFilePath);
      }
      if (CommitTime.Length != 0) {
        output.WriteRawTag(42);
        output.WriteString(CommitTime);
      }
      if (LastModified.Length != 0) {
        output.WriteRawTag(50);
        output.WriteString(LastModified);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Id != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Id);
      }
      if (SubmitterId != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(SubmitterId);
      }
      if (Title.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Title);
      }
      if (PaperFilePath.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(PaperFilePath);
      }
      if (CommitTime.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(CommitTime);
      }
      if (LastModified.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(LastModified);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(Paper other) {
      if (other == null) {
        return;
      }
      if (other.Id != 0) {
        Id = other.Id;
      }
      if (other.SubmitterId != 0) {
        SubmitterId = other.SubmitterId;
      }
      if (other.Title.Length != 0) {
        Title = other.Title;
      }
      if (other.PaperFilePath.Length != 0) {
        PaperFilePath = other.PaperFilePath;
      }
      if (other.CommitTime.Length != 0) {
        CommitTime = other.CommitTime;
      }
      if (other.LastModified.Length != 0) {
        LastModified = other.LastModified;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Id = input.ReadInt32();
            break;
          }
          case 16: {
            SubmitterId = input.ReadInt32();
            break;
          }
          case 26: {
            Title = input.ReadString();
            break;
          }
          case 34: {
            PaperFilePath = input.ReadString();
            break;
          }
          case 42: {
            CommitTime = input.ReadString();
            break;
          }
          case 50: {
            LastModified = input.ReadString();
            break;
          }
        }
      }
    }

  }

  public sealed partial class JsonResult : pb::IMessage<JsonResult> {
    private static readonly pb::MessageParser<JsonResult> _parser = new pb::MessageParser<JsonResult>(() => new JsonResult());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<JsonResult> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Com.Lee.Ficss.Proto.PaperReflection.Descriptor.MessageTypes[9]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public JsonResult() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public JsonResult(JsonResult other) : this() {
      code_ = other.code_;
      message_ = other.message_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public JsonResult Clone() {
      return new JsonResult(this);
    }

    /// <summary>Field number for the "code" field.</summary>
    public const int CodeFieldNumber = 1;
    private int code_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Code {
      get { return code_; }
      set {
        code_ = value;
      }
    }

    /// <summary>Field number for the "message" field.</summary>
    public const int MessageFieldNumber = 2;
    private string message_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Message {
      get { return message_; }
      set {
        message_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as JsonResult);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(JsonResult other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Code != other.Code) return false;
      if (Message != other.Message) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Code != 0) hash ^= Code.GetHashCode();
      if (Message.Length != 0) hash ^= Message.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Code != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(Code);
      }
      if (Message.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(Message);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Code != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Code);
      }
      if (Message.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Message);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(JsonResult other) {
      if (other == null) {
        return;
      }
      if (other.Code != 0) {
        Code = other.Code;
      }
      if (other.Message.Length != 0) {
        Message = other.Message;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Code = input.ReadInt32();
            break;
          }
          case 18: {
            Message = input.ReadString();
            break;
          }
        }
      }
    }

  }

  public sealed partial class AvailablePapersResult : pb::IMessage<AvailablePapersResult> {
    private static readonly pb::MessageParser<AvailablePapersResult> _parser = new pb::MessageParser<AvailablePapersResult>(() => new AvailablePapersResult());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<AvailablePapersResult> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Com.Lee.Ficss.Proto.PaperReflection.Descriptor.MessageTypes[10]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public AvailablePapersResult() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public AvailablePapersResult(AvailablePapersResult other) : this() {
      papers_ = other.papers_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public AvailablePapersResult Clone() {
      return new AvailablePapersResult(this);
    }

    /// <summary>Field number for the "papers" field.</summary>
    public const int PapersFieldNumber = 1;
    private static readonly pb::FieldCodec<global::Com.Lee.Ficss.Proto.Paper> _repeated_papers_codec
        = pb::FieldCodec.ForMessage(10, global::Com.Lee.Ficss.Proto.Paper.Parser);
    private readonly pbc::RepeatedField<global::Com.Lee.Ficss.Proto.Paper> papers_ = new pbc::RepeatedField<global::Com.Lee.Ficss.Proto.Paper>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Com.Lee.Ficss.Proto.Paper> Papers {
      get { return papers_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as AvailablePapersResult);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(AvailablePapersResult other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if(!papers_.Equals(other.papers_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= papers_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      papers_.WriteTo(output, _repeated_papers_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      size += papers_.CalculateSize(_repeated_papers_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(AvailablePapersResult other) {
      if (other == null) {
        return;
      }
      papers_.Add(other.papers_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            papers_.AddEntriesFrom(input, _repeated_papers_codec);
            break;
          }
        }
      }
    }

  }

  public sealed partial class AddPaperToSessionResult : pb::IMessage<AddPaperToSessionResult> {
    private static readonly pb::MessageParser<AddPaperToSessionResult> _parser = new pb::MessageParser<AddPaperToSessionResult>(() => new AddPaperToSessionResult());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<AddPaperToSessionResult> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Com.Lee.Ficss.Proto.PaperReflection.Descriptor.MessageTypes[11]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public AddPaperToSessionResult() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public AddPaperToSessionResult(AddPaperToSessionResult other) : this() {
      Success = other.Success;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public AddPaperToSessionResult Clone() {
      return new AddPaperToSessionResult(this);
    }

    /// <summary>Field number for the "success" field.</summary>
    public const int SuccessFieldNumber = 1;
    private static readonly pb::FieldCodec<bool?> _single_success_codec = pb::FieldCodec.ForStructWrapper<bool>(10);
    private bool? success_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool? Success {
      get { return success_; }
      set {
        success_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as AddPaperToSessionResult);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(AddPaperToSessionResult other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Success != other.Success) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (success_ != null) hash ^= Success.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (success_ != null) {
        _single_success_codec.WriteTagAndValue(output, Success);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (success_ != null) {
        size += _single_success_codec.CalculateSizeWithTag(Success);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(AddPaperToSessionResult other) {
      if (other == null) {
        return;
      }
      if (other.success_ != null) {
        if (success_ == null || other.Success != false) {
          Success = other.Success;
        }
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            bool? value = _single_success_codec.Read(input);
            if (success_ == null || value != false) {
              Success = value;
            }
            break;
          }
        }
      }
    }

  }

  public sealed partial class DeletePaperFromSessionResult : pb::IMessage<DeletePaperFromSessionResult> {
    private static readonly pb::MessageParser<DeletePaperFromSessionResult> _parser = new pb::MessageParser<DeletePaperFromSessionResult>(() => new DeletePaperFromSessionResult());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<DeletePaperFromSessionResult> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Com.Lee.Ficss.Proto.PaperReflection.Descriptor.MessageTypes[12]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DeletePaperFromSessionResult() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DeletePaperFromSessionResult(DeletePaperFromSessionResult other) : this() {
      Success = other.Success;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DeletePaperFromSessionResult Clone() {
      return new DeletePaperFromSessionResult(this);
    }

    /// <summary>Field number for the "success" field.</summary>
    public const int SuccessFieldNumber = 1;
    private static readonly pb::FieldCodec<bool?> _single_success_codec = pb::FieldCodec.ForStructWrapper<bool>(10);
    private bool? success_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool? Success {
      get { return success_; }
      set {
        success_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as DeletePaperFromSessionResult);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(DeletePaperFromSessionResult other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Success != other.Success) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (success_ != null) hash ^= Success.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (success_ != null) {
        _single_success_codec.WriteTagAndValue(output, Success);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (success_ != null) {
        size += _single_success_codec.CalculateSizeWithTag(Success);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(DeletePaperFromSessionResult other) {
      if (other == null) {
        return;
      }
      if (other.success_ != null) {
        if (success_ == null || other.Success != false) {
          Success = other.Success;
        }
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            bool? value = _single_success_codec.Read(input);
            if (success_ == null || value != false) {
              Success = value;
            }
            break;
          }
        }
      }
    }

  }

  #endregion

}

#endregion Designer generated code
